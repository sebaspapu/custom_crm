<odoo>
    <data>
        <!-- todas la vitas se definen con la etiqueta record -->

        <!--vista tipo formulario-->
        <record model="ir.ui.view" id="view_custom_crm_visit_form">
            <field name="name">view.custom.crm.visit.form</field> <!-- se pone el mismo nombre del id, separado por puntos -->
            <field name="model">custom_crm.visit</field><!-- se pone el nombre del modelo creado dentro del archivo py models -->
            <field name="arch" type="xml">
                <form string="Visita">
                    <sheet> <!-- representa_todo el cuadro en donde va a quedar almacenada la info de lo que ponemos en la filas y columnas -->
                        <group name="group_top">

                            <group name="group_left"> <!-- grupo de la columna de la izquierda. Aqui vamos a agregar los atributos de la parte izquierda -->
                                <field name="customer"/><!--Aqui se representa el valor del cliente-->
                                <field name="date"/><!--Aqui se representa el valor del cliente-->
                                <field name="type"/><!--Aqui se representa el valor del cliente-->
                            </group>

                            <group name="group_rigth"> <!-- grupo de la columna de la derecha.Aqui vamos a agregar los atributos de la parte derecha -->
                                <field name="name"/> <!--la descripcion-->
                                <field name="done"/>  <!--esta realizada-->
                                <field name="image" widget="image"/> <!--Aqui va la imagen, este es el campo para esa imagen. En resumen nos carga la imagen y nos lo pinta en la vista-->
                            </group>

                        </group>
                    </sheet>
                </form>
            </field>
        </record>

        <!--vista tipo arbol-->
        <!--con esto ya tenemos como identificar el registro-->
        <record id="view_custom_crm_visit_tree" model="ir.ui.view"> <!--vista tipo arbol-->
            <field name="name">view.custom.crm.visit.tree</field>
            <field name="model">custom_crm.visit</field><!--defincion del modelo-->
            <field name="arch" type="xml">
                <tree string="Visit">
                    <!--Aqui le especificamos las columnas que queremos que nos muestre-->
                    <field name="customer"/>
                    <field name="name"/>
                    <field name="type"/>
                    <field name="date"/>
                    <!-- Aqui añadiremos los botones que apareceran en la vista arbol, los cuales tendran definidos en su interior las funciones
                    que me permitiran realizar las consultas a la base de datos-->
                    <!-- Un boton se define de la siguiente manera:
                    Eqtiqueta button
                     Luego el nombre de la funcionan la cual invocaremos cuando demos click sobre el
                     Atraves de un String le indicamos el nombre que queremos que nos muestre
                     le especificamos la clase ts para que nos lo pinte de la manera estadar que hace odoo (osea que quede con esa forma morada)
                     Y le especificamos el tipo, que en este caso será un objecto-->
                    <button name="f_create" string="Crear" class="oe_highlight" type="object"/>
                    <!--Boton buscar y editar-->
                    <button name="f_search_update" string="Buscar/Editar" class="oe_highlight" type="object"/>

                </tree>
            </field>
        </record>



               <!--vista tipo kanban-->
        <record id="view_custom_crm_visit_kanban" model="ir.ui.view"><!--El id es; view, el nombre del modulo, el nombre del modelo, el tipo de vista  -->
            <field name="name">view.custom.crm.visit.kanban</field><!-- ponemos el mismo nombre dado en el id, pero en este caso separamos por puntos-->
            <field name="model">custom_crm.visit</field>
            <field name="arch" type="xml">  <!-- todas las vistas se definen en xml, casi siempre se sigue la misma estructura para definir las vistas o los modelos, esto es un estandar. NOTA: una vez domine esto no tendre ningun problema.-->
                <!--Apartir de aqui empezaré a definir lo que aparecerá en cada una de las tarjetas-->
                <kanban class="o_custom_crm_visit_kanban"> <!--le damos un nombre a la clase de la etiqueta kanban-->
                    <!--Aqui le especificaremos todos los datos que queremos que nos aparezcan en la vista kanban-->
                    <field name="id"/> <!--lo usamos para identificar el registro kanban-->
                    <field name="name"/><!--nombre-->
                    <field name="customer"/><!--cliente-->
                    <field name="date"/><!--fecha-->
                    <field name="type"/><!--tipo-->
                    <!--aqui lo que hicimos fue precargar un poco los datos antes de cargarlos en la plantilla-->

                    <!--A continuacion las plantillas:
                    Aqui en las plantillas podemos tener definidas varias plantillas-->
                    <templates>
                        <!--Primero se define una plantilla padre.
                        Y dentro de esta es que haremos la definicion de los campos y como se estructuran-->
                        <t t-name="kanban-box">
                            <!--Los campos se estructuran a traves de clases ttf.-->
                            <!--La clase en donde va la imagen, y que ocupa aproximadamente el 30% de la tarjeta a su izquierda la definimos aqui:
                            Aqui se define esa etiqueta para la imagen-->
                            <div t-attf-class="oe_kanban_global_click"> <!-- la etiqueta div se utiliza para dividir y definir un bloque de contenido oseccion de una pagina-->
                                <div class="o_kanban_image"><!--Bueno, aqui es donde definimos la imagen como tal-->
                                    <img alt="Avatar"
                                         t-att-src="kanban_image('custom_crm.visit', 'image', record.id.raw_value)"/>
                                </div> <!-- Ponemos ese nombre avatar en caso de que no se pueda cargar la imagen.
                                La imagen se carga a traves de este metodo "kanban_image", se le pasan los siguientes atributos: el nombre del modelo, luego el nombre del caso que queremos que nos pinte, el siguiente campo lo dejamos igual ya que es el que utiliza odoo para identificar el registro y eso atraves del id  -->
                                <div class="oe_kanban_details">
                                    <strong class="o_kanban_record_title">
                                        <field name="name"/><!--pintamos el nombre en la tajeta-->
                                        <field name="customer"/><!--pintamos el cliente al cual va asociado-->
                                    </strong>
                                    <!-- esto de aqui abajo lo hacemos por si hay algun valor como fecha o tipo pues entonces tambien nos lo incluya en la tarjeta-->
                                    <div t-if="record.date.value"><!--pintamos la fecha en la tarjeta-->
                                        <t t-esc="record.date.value"/>
                                    </div>
                                    <div t-if="record.type.value"><!--pintamos el tipo en la tarjeta-->
                                        <t t-esc="record.type.value"/>
                                    </div>
                                </div>
                            </div>
                        </t>
                    </templates>
                </kanban>
            </field>
        </record>


        <!-- vista de personalizacion de las busquedas:-->
        <record id="view_custom_crm_visit_search" model="ir.ui.view"> <!-- el id es: view, nombre del modulo, modelo, entidad que en este caso es search-->
            <field name="name">view.custom.crm.visit.search</field>
            <field name="model">custom_crm.visit</field>
            <field name="arch" type="xml">
                <!--Podremos indicar que campos queremos que se puedan filtrar. Po ejemplo queremos que se filtre por el nombre de la visita y la fecha.
                Tambien podemos generar filtros predefinidos, y podemos generar agrupaciones predefinidas que le aparezcan al usuario una vez acceda a la vista sin que el tenga que definirlos.-->

                <!-- lo primero que haremos será darle un nombre, y aqui le especificaremos por que campos queremos que se filtre.
                Estos son los campos que quiero que muestre una vez se haga el filtro por grupos.-->
                <search string="Filtrar visitas">
                    <field name="name"/> <!-- Descripcion-->
                    <field name="customer"/> <!-- cliente-->
                    <field name="type"/> <!-- tipo; si es presencial, telfeonico, por whtasapp -->
                    <field name="date"/> <!-- Fecha-->

                    <!--Campos de agrupaciones predefinidas-->
                    <group expand="0" string="Group By">

                        <!--Aqui haremos una agrupacion por Tipo:-->
                        <!-- En el domain se le pasaria un array de tuplas. En este caso por ejemplo le diremos que nos filtre solamete las que estan "Realizadas", osea las visitas realizadas. Y quedaria asi: domain="[('done','=', 'True')]" -->
                        <filter name="groupby_type" string="Tipo" domain="[]" context="{'group_by':'type'}"
                                help="Agrupar por tipo"/>

                        <!--Aqui podriamos que nos agrupe por la Fecha:-->
                        <filter name="groupby_date" string="Fecha" context="{'group_by':'date:year'}"
                                help="Agrupar por Fecha"/>
                    </group>

                    <!--Ahora aqui definimos como se hacen los filtrados:
                    Para este caso especificaremos el filtro, que me traiga las visitas que estan "realizadas"-->
                    <filter name="filter_by_done" string="Realizada" domain="[('done','=','True')]"
                            help="Visitas realizadas"/>
                </search>
            </field>
        </record>


         <!-- este es el "controlador" , lo que decia del atributo actions que aqui hace las veces de controlador a traves de la etiqueta actios
        para poder gestionar las vistas. Entonces esta parte lo que nos ayudara será a enlazar las vistas con las etiquetas de menu-->
        <record id="action_custom_crm_visit_view" model="ir.actions.act_window">
            <field name="name">Visita</field>
            <field name="type">ir.actions.act_window</field>
            <field name="res_model">custom_crm.visit</field>
            <field name="view_mode">tree,form,kanban</field><!-- el modo de la vista será una vista tree y una vista formulario,
            que son las que creamos previamente, antes pues de haber echo la parte del menu de vistas y de darle la funcionalidad
            a la eqiqueta actions. Tambien agregamos Kamban porque vamos a manejarla tambien-->
            <field name="help" type="html">
                <p class="oe_view_nocontent_create">
                    Visitas
                </p>
                <p>
                    Click "Nuevo" para añadir nuevos elementos
                </p>
            </field>
        </record>

        <!-- cuando queremos acceder a una vista en concreto tenemos que utilizar un menu
            Aqui haremos un menu.
            En odoo los menus se estructuran en 3 niveles.-->

        <!--primer nivel-->
        <menuitem id="menu_custom_crm_root" name="Custom CRM" sequence="10" /> <!-- -->

        <!-- segundo nivel-->
        <menuitem id="menu_custom_crm_visit_categ" name="Operaciones" parent="menu_custom_crm_root" sequence="0"/> <!-- el parent es para decirle a que item será asociado -->

        <!--tercer nivel-->
        <!--el atributo actions es el mas importante ya que es quien me permitira acceder desde el menu a cualquiera de las vistas
        Hace las veces de controlador; ya que quien envia o hace peticiones a el modelo.
        Ya que quien gestiona la labor entre las vistas es el controlador, quien consulta o le pide datos, o le envia datos al modelo es el controlador.
        La idea es que al darle click en un elemento de menu, este nos redirija a una vista en concreto.
        La acciones tambien se define tambien por un grupo record-->
        <menuitem id="menu_custom_crm_visit" name="Visitas" parent="menu_custom_crm_visit_categ" sequence="0" action="action_custom_crm_visit_view"/>



    </data>
</odoo>